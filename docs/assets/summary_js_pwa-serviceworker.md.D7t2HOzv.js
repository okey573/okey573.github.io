import{_ as e,c as r,o as a,a4 as o}from"./chunks/framework.bPmW087-.js";const k=JSON.parse('{"title":"pwa 和 service worker","description":"","frontmatter":{"title":"pwa 和 service worker"},"headers":[],"relativePath":"summary/js/pwa-serviceworker.md","filePath":"summary/js/pwa-serviceworker.md","lastUpdated":1711423504000}'),s={name:"summary/js/pwa-serviceworker.md"},t=o('<h1 id="pwa-和-service-worker" tabindex="-1">PWA 和 service worker <a class="header-anchor" href="#pwa-和-service-worker" aria-label="Permalink to &quot;PWA 和 service worker&quot;">​</a></h1><p><em>个人感觉PWA不重要，在国内没什么市场，国内的小程序太多了👻</em></p><h2 id="pwa是什么" tabindex="-1">PWA是什么？ <a class="header-anchor" href="#pwa是什么" aria-label="Permalink to &quot;PWA是什么？&quot;">​</a></h2><p>渐进式网络应用（Progressive Web App）是谷歌在2015年底提出的概念。基本上算是web应用程序，但在外观和感觉上与原生app类似。支持PWA的网站可以提供脱机工作、推送通知和设备硬件访问等功能。</p><h2 id="service-workers是什么" tabindex="-1">Service Workers是什么？ <a class="header-anchor" href="#service-workers是什么" aria-label="Permalink to &quot;Service Workers是什么？&quot;">​</a></h2><p>Service Worker是浏览器在后台独立于网页运行的脚本，它打开了通向不需要网页或用户交互的功能的大门。 现在，它们已包括如推送通知和后台同步等功能。 将来，Service Worker将会支持如定期同步或地理围栏等其他功能。 本教程讨论的核心功能是拦截和处理网络请求，包括通过程序来管理缓存中的响应。</p>',6),i=[t];function c(p,n,_,d,l,w){return a(),r("div",null,i)}const m=e(s,[["render",c]]);export{k as __pageData,m as default};
