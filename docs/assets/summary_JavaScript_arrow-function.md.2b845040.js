import{_ as e,o as a,c as s,a as n}from"./app.2e7f410a.js";const g=JSON.parse('{"title":"箭头函数","description":"","frontmatter":{"title":"箭头函数"},"headers":[{"level":2,"title":"this","slug":"this","link":"#this","children":[]},{"level":2,"title":"箭头函数的原型是 undefined","slug":"箭头函数的原型是-undefined","link":"#箭头函数的原型是-undefined","children":[]},{"level":2,"title":"箭头函数不能当成一个构造函数","slug":"箭头函数不能当成一个构造函数","link":"#箭头函数不能当成一个构造函数","children":[]},{"level":2,"title":"不能使用 new.target","slug":"不能使用-new-target","link":"#不能使用-new-target","children":[]},{"level":2,"title":"箭头函数没有 arguments 对象","slug":"箭头函数没有-arguments-对象","link":"#箭头函数没有-arguments-对象","children":[]}],"relativePath":"summary/JavaScript/arrow-function.md","lastUpdated":1679136122000}'),t={name:"summary/JavaScript/arrow-function.md"},l=n(`<p>箭头函数表达式的语法比函数表达式更简洁，并且没有自己的 this，arguments，super 或 new.target。箭头函数表达式更适用于那些本来需要匿名函数的地方，并且它不能用作构造函数</p><h2 id="this" tabindex="-1">this <a class="header-anchor" href="#this" aria-hidden="true">#</a></h2><ol><li>箭头函数没有自己的 this 对象，内部的 this 就是定义时上层作用域中的 this，也就是说，箭头函数内部的 this 指向是固定的</li><li>箭头函数的 this 不能被 call、apply、bind 改变</li></ol><h2 id="箭头函数的原型是-undefined" tabindex="-1">箭头函数的原型是 undefined <a class="header-anchor" href="#箭头函数的原型是-undefined" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> fn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">v</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> v</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">fn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// expect undefined</span></span>
<span class="line"></span></code></pre></div><h2 id="箭头函数不能当成一个构造函数" tabindex="-1">箭头函数不能当成一个构造函数 <a class="header-anchor" href="#箭头函数不能当成一个构造函数" aria-hidden="true">#</a></h2><h2 id="不能使用-new-target" tabindex="-1">不能使用 new.target <a class="header-anchor" href="#不能使用-new-target" aria-hidden="true">#</a></h2><h2 id="箭头函数没有-arguments-对象" tabindex="-1">箭头函数没有 arguments 对象 <a class="header-anchor" href="#箭头函数没有-arguments-对象" aria-hidden="true">#</a></h2>`,8),r=[l];function i(o,c,p,d,h,u){return a(),s("div",null,r)}const f=e(t,[["render",i]]);export{g as __pageData,f as default};
