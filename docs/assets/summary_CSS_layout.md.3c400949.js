import{_ as s,o as a,c as e,a as n}from"./app.79b86390.js";const y=JSON.parse('{"title":"响应式布局和自适应布局","description":"","frontmatter":{"title":"响应式布局和自适应布局"},"headers":[{"level":2,"title":"响应式布局和自适应布局的区别","slug":"响应式布局和自适应布局的区别","link":"#响应式布局和自适应布局的区别","children":[]}],"relativePath":"summary/CSS/layout.md","lastUpdated":1679492268000}'),l={name:"summary/CSS/layout.md"},t=n(`<h1 id="响应式布局和自适应布局" tabindex="-1">响应式布局和自适应布局 <a class="header-anchor" href="#响应式布局和自适应布局" aria-hidden="true">#</a></h1><h2 id="响应式布局和自适应布局的区别" tabindex="-1">响应式布局和自适应布局的区别 <a class="header-anchor" href="#响应式布局和自适应布局的区别" aria-hidden="true">#</a></h2><p><em>网上怎么说的的都有，下面这个可能描述可能刚好相反...</em></p><ul><li>自适应布局是多个网页对应对各个设备，响应式布局是一套网页对应多个设备</li><li>自适应对页面做的屏幕适配是在一定范围：比如pc端一般要大于1024像素，手机端要小于768像素。而响应式布局全部适应</li><li>自适应布局如果屏幕太小会发生内容过于拥挤。而响应式布局正是为了解决这个问题而衍生出的概念，它可以自动识别屏幕宽度并做出相应调整的网页设计</li></ul><h4 id="meta标签定义" tabindex="-1">Meta标签定义 <a class="header-anchor" href="#meta标签定义" aria-hidden="true">#</a></h4><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, initial-scale=1.0, maximum-scale=1.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><p>意思是网页宽度默认等于屏幕宽度，缩放比为1.0</p><h4 id="css" tabindex="-1">css <a class="header-anchor" href="#css" aria-hidden="true">#</a></h4><p>不需要写固定的像素，改用%形式或者auto</p><h4 id="使用css中的-media" tabindex="-1">使用css中的@media <a class="header-anchor" href="#使用css中的-media" aria-hidden="true">#</a></h4><p>使用媒体查询</p><h4 id="按照屏幕大小不同引入不同的css文件" tabindex="-1">按照屏幕大小不同引入不同的css文件 <a class="header-anchor" href="#按照屏幕大小不同引入不同的css文件" aria-hidden="true">#</a></h4><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">link</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">rel</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">stylesheet</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text/css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">media</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">screen and (max-device-width: 1080px)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">href</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">style/css/demo1.css</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">/*也可以这样写*/</span></span>
<span class="line"><span style="color:#A6ACCD;">@import url(&quot;demo1.css&quot;) screen and (max-device-width: 1080px);</span></span>
<span class="line"></span></code></pre></div><h4 id="使用流式-浮动栅格布局" tabindex="-1">使用流式，浮动栅格布局 <a class="header-anchor" href="#使用流式-浮动栅格布局" aria-hidden="true">#</a></h4>`,14),o=[t];function p(c,r,i,d,D,h){return a(),e("div",null,o)}const u=s(l,[["render",p]]);export{y as __pageData,u as default};
