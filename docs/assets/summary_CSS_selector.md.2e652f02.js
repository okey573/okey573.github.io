import{_ as e,c as i,o as l,a as t}from"./app.c6564c1c.js";const m=JSON.parse('{"title":"选择器和优先级","description":"","frontmatter":{"title":"选择器和优先级"},"headers":[{"level":2,"title":"选择器","slug":"选择器","link":"#选择器","children":[]},{"level":2,"title":"层叠性","slug":"层叠性","link":"#层叠性","children":[]},{"level":2,"title":"优先级","slug":"优先级","link":"#优先级","children":[]}],"relativePath":"summary/CSS/selector.md","lastUpdated":1677988180000}'),a={name:"summary/CSS/selector.md"},r=t('<h2 id="选择器" tabindex="-1">选择器 <a class="header-anchor" href="#选择器" aria-hidden="true">#</a></h2><ul><li>标签选择器</li><li>类选择器</li><li>id选择器</li><li>全局选择器</li><li>组合选择器</li><li>后代选择器</li><li>群组选择器</li><li>继承选择器</li><li>伪类选择器</li><li>字符串匹配的属性选择符</li><li>子选择器</li><li>CSS 相邻兄弟选择器</li></ul><h2 id="层叠性" tabindex="-1">层叠性 <a class="header-anchor" href="#层叠性" aria-hidden="true">#</a></h2><p>就是css处理冲突的能力。层叠性是一种能力。当多个选择器描述了同一个属性的时候，这个属性到底应该听谁的？</p><h2 id="优先级" tabindex="-1">优先级 <a class="header-anchor" href="#优先级" aria-hidden="true">#</a></h2><p>!important &gt; 行内样式 &gt; ID选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性</p>',6),s=[r];function n(d,c,o,_,h,p){return l(),i("div",null,s)}const g=e(a,[["render",n]]);export{m as __pageData,g as default};
