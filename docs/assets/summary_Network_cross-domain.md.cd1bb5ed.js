import{_ as s,o as e,c as a,a as n}from"./app.8d8eadf5.js";const m=JSON.parse('{"title":"跨域","description":"","frontmatter":{"title":"跨域"},"headers":[{"level":2,"title":"跨域的原因","slug":"跨域的原因","link":"#跨域的原因","children":[]},{"level":2,"title":"解决办法","slug":"解决办法","link":"#解决办法","children":[{"level":3,"title":"cors","slug":"cors","link":"#cors","children":[]},{"level":3,"title":"jsonp","slug":"jsonp","link":"#jsonp","children":[]},{"level":3,"title":"代理","slug":"代理","link":"#代理","children":[]},{"level":3,"title":"iframe 跨域","slug":"iframe-跨域","link":"#iframe-跨域","children":[]},{"level":3,"title":"postMessage 跨域","slug":"postmessage-跨域","link":"#postmessage-跨域","children":[]},{"level":3,"title":"WebSocket 协议跨域","slug":"websocket-协议跨域","link":"#websocket-协议跨域","children":[]}]}],"relativePath":"summary/Network/cross-domain.md","lastUpdated":1679220519000}'),l={name:"summary/Network/cross-domain.md"},t=n(`<h1 id="跨域" tabindex="-1">跨域 <a class="header-anchor" href="#跨域" aria-hidden="true">#</a></h1><h2 id="跨域的原因" tabindex="-1">跨域的原因 <a class="header-anchor" href="#跨域的原因" aria-hidden="true">#</a></h2><p>浏览器的同源策略，为了安全。。</p><h2 id="解决办法" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法" aria-hidden="true">#</a></h2><p>知道原因就知道怎么解决了。服务端没有跨域，不管是正向还是反向，用一个新服务做一层代理就行了。</p><p>script 标签， img 标签没有跨域限制，或者说限制比较宽松</p><p>官方推荐的 cors 方法，设置相关的 header</p><h3 id="cors" tabindex="-1">cors <a class="header-anchor" href="#cors" aria-hidden="true">#</a></h3><p>服务端设置响应头</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">// 允许跨域的站点</span></span>
<span class="line"><span style="color:#A6ACCD;">Access-Control-Allow-Origin: http://xxxx.com</span></span>
<span class="line"><span style="color:#A6ACCD;">// 同意接受 cookie</span></span>
<span class="line"><span style="color:#A6ACCD;">Access-Control-Allow-Credentials: true</span></span>
<span class="line"><span style="color:#A6ACCD;">// 接受的自定义请求 header</span></span>
<span class="line"><span style="color:#A6ACCD;">Access-Control-Expose-Headers: CustomHeader</span></span>
<span class="line"><span style="color:#A6ACCD;">// 请求的方法</span></span>
<span class="line"><span style="color:#A6ACCD;">Access-Control-Allow-Methods: PUT,GET,POST</span></span>
<span class="line"><span style="color:#A6ACCD;">// 预检的有效期，在有效时间内不再检测是否跨域</span></span>
<span class="line"><span style="color:#A6ACCD;">Access-Control-max-age: 3600</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>客户端也要在请求中主动开启设置 cookie</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">xhr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">withCredentials </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"></span></code></pre></div><h3 id="jsonp" tabindex="-1">jsonp <a class="header-anchor" href="#jsonp" aria-hidden="true">#</a></h3><h3 id="代理" tabindex="-1">代理 <a class="header-anchor" href="#代理" aria-hidden="true">#</a></h3><h3 id="iframe-跨域" tabindex="-1">iframe 跨域 <a class="header-anchor" href="#iframe-跨域" aria-hidden="true">#</a></h3><h3 id="postmessage-跨域" tabindex="-1">postMessage 跨域 <a class="header-anchor" href="#postmessage-跨域" aria-hidden="true">#</a></h3><h3 id="websocket-协议跨域" tabindex="-1">WebSocket 协议跨域 <a class="header-anchor" href="#websocket-协议跨域" aria-hidden="true">#</a></h3>`,17),o=[t];function r(i,c,p,d,h,C){return e(),a("div",null,o)}const u=s(l,[["render",r]]);export{m as __pageData,u as default};
