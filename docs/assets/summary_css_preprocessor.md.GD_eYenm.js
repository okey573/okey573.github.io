import{_ as s,c as a,o as e,a4 as t}from"./chunks/framework.CbHUKvme.js";const m=JSON.parse('{"title":"预处理器","description":"","frontmatter":{"title":"预处理器"},"headers":[],"relativePath":"summary/css/preprocessor.md","filePath":"summary/css/preprocessor.md","lastUpdated":1720785406000}'),r={name:"summary/css/preprocessor.md"},o=t('<h1 id="css-预处理器" tabindex="-1">CSS 预处理器 <a class="header-anchor" href="#css-预处理器" aria-label="Permalink to &quot;CSS 预处理器&quot;">​</a></h1><p>css是单纯描述性的，没有任何逻辑。所以大多数人不愿意编写css。所以就诞生了css预处理器，赋予了相应的编程能力，但是会加重负担，带来响应的编译&amp;学习&amp;调试负担</p><h2 id="sass" tabindex="-1"><a href="https://github.com/sass/sass" target="_blank" rel="noreferrer">Sass</a> <a class="header-anchor" href="#sass" aria-label="Permalink to &quot;[Sass](https://github.com/sass/sass)&quot;">​</a></h2><h2 id="less" tabindex="-1"><a href="https://github.com/less/less.js" target="_blank" rel="noreferrer">Less</a> <a class="header-anchor" href="#less" aria-label="Permalink to &quot;[Less](https://github.com/less/less.js)&quot;">​</a></h2><h2 id="stylus" tabindex="-1"><a href="https://github.com/stylus/stylus" target="_blank" rel="noreferrer">Stylus</a> <a class="header-anchor" href="#stylus" aria-label="Permalink to &quot;[Stylus](https://github.com/stylus/stylus)&quot;">​</a></h2>',5),l=[o];function c(h,i,n,p,u,_){return e(),a("div",null,l)}const f=s(r,[["render",c]]);export{m as __pageData,f as default};
